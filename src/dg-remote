#!/usr/bin/python

#  Copyright 2011, Florent Lamiraux, Duong Dang, CNRS
#
#  This file is part of dynamic-graph-corba.
#  dynamic-graph-corba is free software: you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public License
#  as published by the Free Software Foundation, either version 3 of
#  the License, or (at your option) any later version.
#
#  dynamic-graph-corba is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Lesser Public License for more details.  You should have
#  received a copy of the GNU Lesser General Public License along with
#  dynamic-graph-corba. If not, see <http://www.gnu.org/licenses/>.

# from omniORB import CORBA
# import CosNaming

import sys
import code
from code import InteractiveConsole
import sys
from dynamic_graph.corba.dynamicGraph import Interpreter
from omniORB import CORBA
import CosNaming
import readline
class CorbaShell(InteractiveConsole):
    def __init__(self):
        self.cache = ""
        InteractiveConsole.__init__(self)
        self.orb = CORBA.ORB_init (sys.argv, CORBA.ORB_ID)
        self.obj = self.orb.resolve_initial_references("NameService")
        self.rootContext = self.obj._narrow(CosNaming.NamingContext)

        self.name = [CosNaming.NameComponent ("dynamic_graph","test"),
                     CosNaming.NameComponent ("python","server")]
        self.obj = self.rootContext.resolve (self.name)
        self.client = self.obj._narrow(Interpreter)
        self.client.python('help')

    def runcode(self, code):
        source = self.cache[:-1]
        if source != "":
            result = self.client.python(str(source))
            if result != "None":
                print result
        self.cache = ""

    def push(self,line):
        self.cache += line + "\n"
        return InteractiveConsole.push(self,line)



if __name__ == '__main__':
     sh = CorbaShell()
     sh.interact("Remote shell client. Python code will be executed at the server side.")

